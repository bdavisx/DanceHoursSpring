/**
 * This class is generated by jOOQ
 */
package com.tartner.dancehours.querymodel.database.tables.records;

/**
 * This class is generated by jOOQ.
 */
@javax.annotation.Generated(
	value = {
		"http://www.jooq.org",
		"jOOQ version:3.5.4"
	},
	comments = "This class is generated by jOOQ"
)
@java.lang.SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AggregatePasswordsRecord extends org.jooq.impl.UpdatableRecordImpl<com.tartner.dancehours.querymodel.database.tables.records.AggregatePasswordsRecord> implements org.jooq.Record3<java.util.UUID, byte[], byte[]> {

	private static final long serialVersionUID = -1487002062;

	/**
	 * Setter for <code>public.aggregate_passwords.aggregate_id</code>.
	 */
	public AggregatePasswordsRecord setAggregateId(java.util.UUID value) {
		setValue(0, value);
		return this;
	}

	/**
	 * Getter for <code>public.aggregate_passwords.aggregate_id</code>.
	 */
	public java.util.UUID getAggregateId() {
		return (java.util.UUID) getValue(0);
	}

	/**
	 * Setter for <code>public.aggregate_passwords.password_hash</code>.
	 */
	public AggregatePasswordsRecord setPasswordHash(byte[] value) {
		setValue(1, value);
		return this;
	}

	/**
	 * Getter for <code>public.aggregate_passwords.password_hash</code>.
	 */
	public byte[] getPasswordHash() {
		return (byte[]) getValue(1);
	}

	/**
	 * Setter for <code>public.aggregate_passwords.salt</code>.
	 */
	public AggregatePasswordsRecord setSalt(byte[] value) {
		setValue(2, value);
		return this;
	}

	/**
	 * Getter for <code>public.aggregate_passwords.salt</code>.
	 */
	public byte[] getSalt() {
		return (byte[]) getValue(2);
	}

	// -------------------------------------------------------------------------
	// Primary key information
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Record1<java.util.UUID> key() {
		return (org.jooq.Record1) super.key();
	}

	// -------------------------------------------------------------------------
	// Record3 type implementation
	// -------------------------------------------------------------------------

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.util.UUID, byte[], byte[]> fieldsRow() {
		return (org.jooq.Row3) super.fieldsRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Row3<java.util.UUID, byte[], byte[]> valuesRow() {
		return (org.jooq.Row3) super.valuesRow();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<java.util.UUID> field1() {
		return com.tartner.dancehours.querymodel.database.tables.AggregatePasswords.AGGREGATE_PASSWORDS.AGGREGATE_ID;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field2() {
		return com.tartner.dancehours.querymodel.database.tables.AggregatePasswords.AGGREGATE_PASSWORDS.PASSWORD_HASH;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public org.jooq.Field<byte[]> field3() {
		return com.tartner.dancehours.querymodel.database.tables.AggregatePasswords.AGGREGATE_PASSWORDS.SALT;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public java.util.UUID value1() {
		return getAggregateId();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value2() {
		return getPasswordHash();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public byte[] value3() {
		return getSalt();
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregatePasswordsRecord value1(java.util.UUID value) {
		setAggregateId(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregatePasswordsRecord value2(byte[] value) {
		setPasswordHash(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregatePasswordsRecord value3(byte[] value) {
		setSalt(value);
		return this;
	}

	/**
	 * {@inheritDoc}
	 */
	@Override
	public AggregatePasswordsRecord values(java.util.UUID value1, byte[] value2, byte[] value3) {
		return this;
	}

	// -------------------------------------------------------------------------
	// Constructors
	// -------------------------------------------------------------------------

	/**
	 * Create a detached AggregatePasswordsRecord
	 */
	public AggregatePasswordsRecord() {
		super(com.tartner.dancehours.querymodel.database.tables.AggregatePasswords.AGGREGATE_PASSWORDS);
	}

	/**
	 * Create a detached, initialised AggregatePasswordsRecord
	 */
	public AggregatePasswordsRecord(java.util.UUID aggregateId, byte[] passwordHash, byte[] salt) {
		super(com.tartner.dancehours.querymodel.database.tables.AggregatePasswords.AGGREGATE_PASSWORDS);

		setValue(0, aggregateId);
		setValue(1, passwordHash);
		setValue(2, salt);
	}
}
